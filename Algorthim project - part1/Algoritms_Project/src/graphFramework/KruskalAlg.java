/*
Group Members: 
2006847 Lujain Abdulaziz AlSulami
2005517 Asal Ali Alghamdi
2006739 Ryam Abdulwase Alsahafie 
2106125 Laura Ismail Fatta

References:
GeeksforGeeks. (2023b). Applications of Minimum Spanning Tree Problem. GeeksforGeeks. https://www.geeksforgeeks.org/applications-of-minimum-spanning-tree/

Poe - Fast, Helpful AI Chat. (n.d.). https://poe.com/

https://www.gatevidyalay.com/tag/kruskals-algorithm-example-with-solution/

Instructor :
I. أسماء الشنقيطي 
I. سيدرا قريشي

*/
package graphFramework;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import PhoneNetworkApp.Line;
import PhoneNetworkApp.Office;


public class KruskalAlg extends MSTAlgorithm {
    
    @Override 
    public void displayResultingMST(Graph graph) {
              List<Line> theminimumSpanningTree = new ArrayList<>();
        // here i sorth the edges in ascending order of their weights
        List<Line> edges = graph.getEdges();
        Collections.sort(edges, Comparator.comparingInt(Line::getWeight));
        // here i start to create a disjoint set for each vertex
        Map<Office, DisjointSet> disjointaSets = new HashMap<>();
        for (Office vertex : graph.getVertices()) {
            disjointaSets.put(vertex, new DisjointSet(vertex));
        }
        // here i start to process the edges in ascending order of their weights
        for (Line edge : edges) {
            Office rsource = (Office) edge.getSource(); 
            Office rtarget = (Office) edge.getTarget(); 
            DisjointSet thesourceSet = disjointaSets.get(rsource);
            DisjointSet thetargetSet = disjointaSets.get(rtarget);

            // her I check if adding the current edge creates a cycle or not 
            if (thesourceSet.find() != thetargetSet.find()) {
                theminimumSpanningTree.add(edge);
                thesourceSet.union(thetargetSet);
            }
        }
        // here i crate an print statment 
        System.out.println("\nThe phone network (minimum spanning tree) generated by Kruskal algorithm is as follows:");
        displayResultingMST(theminimumSpanningTree);
    }
}
//end 